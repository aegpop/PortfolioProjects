<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/agoth/OneDrive/Documentos/Python/Used Cars/Cars.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="3465"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,4:maincars"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="V_Sales_List" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="9" mode="0"/></sort><column_widths/><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="cars" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="18" mode="1"/></sort><column_widths><column index="1" value="184"/><column index="2" value="121"/><column index="3" value="120"/><column index="4" value="58"/><column index="5" value="150"/><column index="6" value="139"/><column index="7" value="112"/><column index="8" value="117"/><column index="9" value="150"/><column index="10" value="102"/><column index="11" value="128"/><column index="12" value="88"/><column index="13" value="93"/><column index="14" value="94"/><column index="15" value="153"/><column index="16" value="145"/><column index="17" value="176"/><column index="18" value="109"/><column index="19" value="141"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Creating a Sales View">CREATE VIEW V_Sales_List AS
SELECT
    manufacturer_name AS Manufacturer,
    model_name AS Model,
    year_produced AS Year,
    color AS Color,
    odometer_value AS &quot;Mileage (km)&quot;,
    engine_fuel AS &quot;Fuel Type&quot;,
    engine_capacity AS Engine,
    has_warranty AS &quot;Has Warranty?&quot;,
    price_usd AS &quot;Price USD&quot;
FROM
    cars;
</sql><sql name="Inventory per brand">SELECT
    manufacturer_name AS Manufacturer,
    COUNT(*) AS Total_Cars,
    CAST(AVG(year_produced) AS INT) AS Average_Year,
    CAST(AVG(price_usd) AS INT) AS Average_Price,
    CAST(SUM(price_usd) AS INT) AS Total_Price
FROM
    cars
GROUP BY
    manufacturer_name
ORDER BY
    Total_Cars DESC;

</sql><sql name="Warranty Status">SELECT
    has_warranty AS Warranty_Status,
    COUNT(*) AS Total_Stock
FROM
    cars
GROUP BY
    has_warranty;
</sql><sql name="Inventory per Decade">SELECT
    ((CAST(year_produced AS INTEGER) / 10) * 10) || 's' AS Decade,
    COUNT(*) AS Cars_Per_Decade,
    SUM(price_usd) AS Total_Price
FROM
    cars
GROUP BY
    ((CAST(year_produced AS INTEGER) / 10) * 10) || 's'
ORDER BY
    Decade;
</sql><sql name="Distribution of cars per colour">SELECT
    color AS Color,
    COUNT(*) AS Total_Cars,
    CAST(AVG(year_produced) AS INT) AS Average_Year,
    CAST(AVG(price_usd) AS INT) AS Average_Price
FROM
    cars
GROUP BY
    color
ORDER BY
    Total_Cars DESC;</sql><sql name="Up votes per brand x % of inventory">-- Calculate the total inventory and the upvotes for the top 5 brands
WITH BrandUpvotes AS (
    SELECT
        manufacturer_name,
        SUM(up_counter) AS Total_Upvotes
    FROM
        cars
    GROUP BY
        manufacturer_name
    ORDER BY
        Total_Upvotes DESC
    LIMIT 5
),
TotalInventory AS (
    SELECT
        COUNT(*) AS Total_Cars
    FROM
        cars
)

-- Calculate the percentage of total inventory for each top brand
SELECT
    b.manufacturer_name AS Brand,
    b.Total_Upvotes,
    ROUND((COUNT(c.manufacturer_name) * 100.0) / t.Total_Cars, 2) AS Inventory_Percentage
FROM
    cars c
JOIN
    BrandUpvotes b ON c.manufacturer_name = b.manufacturer_name
CROSS JOIN
    TotalInventory t
GROUP BY
    b.manufacturer_name
ORDER BY
    b.Total_Upvotes DESC;
</sql><current_tab id="5"/></tab_sql></sqlb_project>
